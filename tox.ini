# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/ops/
tst_path = {toxinidir}/test/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  PATH
  MODEL_SETTINGS

[testenv:lint]
description = Check code against coding style standards
deps =
    autopep8
    isort
    flake8
    flake8-docstrings
    flake8-builtins
    pyproject-flake8
    pep8-naming
commands =
    # pflake8 wrapper suppports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    autopep8 --diff {[vars]all_path}

[testenv:fuzz]
description = Build a LXD container for fuzz tests then run the tests
allowlist_externals =
    lxc
    bash
commands =
    # Create a LXC container with the relevant packages installed
    bash -c 'lxc launch -qe ubuntu:focal {[vars]lxd_name} -c=user.user-data="$(<{[vars]itst_dir}/test_setup.yaml)"'
    # Wait for the cloud-init process to finish
    lxc exec {[vars]lxd_name} -- bash -c "cloud-init status -w >/dev/null 2>&1"
    # Copy all the files needed for fuzz testing
    lxc file push -qp {toxinidir}/tox.ini {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qp {toxinidir}/pyproject.toml {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qpr {toxinidir}/lib {[vars]lxd_name}/{[vars]lxd_name}/
    lxc file push -qpr {[vars]tst_dir} {[vars]lxd_name}/{[vars]lxd_name}/
    # Run the tests
    lxc exec {[vars]lxd_name} -- tox -c /{[vars]lxd_name}/tox.ini -e fuzz-tests {posargs}
commands_post =
    -lxc stop {[vars]lxd_name}

[testenv:fuzz-tests]
description = Run fuzzing tests
deps =
    pytest
commands =
    pytest -v --tb native --ignore={[vars]tst_dir}unit --log-cli-level=INFO -s {posargs}
